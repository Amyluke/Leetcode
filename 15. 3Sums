/**
Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? 
Find all unique triplets in the array which gives the sum of zero.
Note:
The solution set must not contain duplicate triplets.
Example:
Given array nums = [-1, 0, 1, 2, -1, -4],
A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]
**/

/**
full discussion on 3 sum problem: 
https://fizzbuzzed.com/top-interview-questions-1/#twopointer

To be explored: hashmap(n^2)

**/



    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> res = new ArrayList();
        if(nums==null||nums.length==0){
            return res;
        }
        Arrays.sort(nums);
        
        //mistake1: i<nums.length-2
        for(int i =0; i<nums.length-2;i++){
              //mistake2:didn't consider two consecutive same number
            if(i>=1 && nums[i]==nums[i-1]) continue;
           
            int target = -nums[i];
            int l = i+1;
            int h = nums.length-1;
          
            while(l<h){
                if(nums[l]+nums[h]>target){
                    h--;
                }else if(nums[l]+nums[h]<target){
                    l++;
                }else{
                    
                    //mistak4: if consecutive same numbers, should skip
                    while(l<h && nums[l+1]==nums[l]) l++;
                    while(l<h && nums[h]==nums[h-1]) h--;
                    
                    //mistake3: after adding the first one satisfied, infinite loop
                    List<Integer> list = new ArrayList();
                    list.add(nums[i]);
                    list.add(nums[l]);
                    list.add(nums[h]);
                    res.add(list);
                    l++;
                    h--;
            }
        }
    }
        return res;
}
}





