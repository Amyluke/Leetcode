Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2



/**version1: hashmap. O(n) and O(n)
class Solution {
    public int majorityElement(int[] nums) {
        Map<Integer,Integer> map = new HashMap();
        int count = 0;
        for(int i: nums){
            count++;
            if(map.containsKey(i)){
                map.put(i,map.get(i)+1);
            }else
                map.put(i,1);
        }
        for(int j: map.keySet()){
            if(map.get(j)>count/2){
                return j;
            }
        }
        return -1;
    }
}
