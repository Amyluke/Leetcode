
Given two strings s and t, determine if they are isomorphic.

Two strings are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.

Example 1:

Input: s = "egg", t = "add"
Output: true


/**version 1: hashmap
o(n)

class Solution {
    public boolean isIsomorphic(String s, String t) {
        if(s==null || t==null || s.length()!=t.length()) return false;
        Map<Character, Character> s2t = new HashMap();
        for(int i =0; i<s.length();i++){
            System.out.println("key ="+s.charAt(i)+",value = "+s2t.get(s.charAt(i)));
            if(s2t.get(s.charAt(i))==null){
                if(s2t.containsValue(t.charAt(i))) return false;
                else s2t.put(s.charAt(i),t.charAt(i));          
            }else if(s2t.get(s.charAt(i))!=t.charAt(i)){
                return false;
            }
            // System.out.println("i ="+i+",value = "+s2t.get(s.charAt(i)));
        }
        return true;
    }
}

/**version2
